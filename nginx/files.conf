worker_processes auto;

events {
        worker_connections 1024;
}

http{
  upstream files_upstream {
#   server host.docker.internal:8090;
    server host.docker.internal:8080;
  }
     map $upstream_http_cache_control  $no_cache {
          default 0;
          ~*no-store 1;
      }

      map $http_range $skip_range {
          default 0;
          "~.+" 1;
      }

      map $http_x_bypass_cache $bypass_cache {
          default 0;
          ~*^(true|1)$ 1;
      }

    include mime.types;
    proxy_cache_path /tmp/nginx_cache
      levels=1:2
      keys_zone=media_cache:100m
      max_size=10g
      inactive=30m
      use_temp_path=off;
    proxy_cache_valid 200;

      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                                 '$status $body_bytes_sent "$http_referer" '
                                 '"$http_user_agent" "$http_x_forwarded_for"';

      access_log /dev/stdout main;
      error_log /dev/stderr;

      proxy_headers_hash_max_size 2048;
      proxy_headers_hash_bucket_size 128;

       client_max_body_size 0;
       server{
        listen 80;
        underscores_in_headers on;
        ignore_invalid_headers off;
        location /files/download/ {
                    proxy_pass  http://files_upstream;
                    proxy_cache media_cache;
                    proxy_cache_key "$scheme$proxy_host$request_uri";
                    proxy_cache_valid 200 1y;
                    proxy_cache_valid any 0;

                    proxy_set_header Range $http_range;

                    proxy_no_cache $no_cache $skip_range $bypass_cache;
                    proxy_cache_bypass $no_cache $skip_range $bypass_cache;
                    proxy_http_version 1.1;
                    add_header X-Cache-Status $upstream_cache_status always;
             }
        location / {
                    proxy_pass  http://files_upstream;
       }
       }
}