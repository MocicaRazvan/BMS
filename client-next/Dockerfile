FROM node:20-alpine AS base


FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app


COPY package*.json ./
RUN npm install


FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

ENV NEXT_TELEMETRY_DISABLED=1


ARG NEXT_PUBLIC_SPRING
ARG NEXT_PUBLIC_SPRING_CLIENT
ARG NEXTAUTH_URL
ARG NEXTAUTH_URL_INTERNAL
ARG NEXT_PUBLIC_NEXTAUTH_URL
ARG OLLAMA_MODEL
ARG OLLAMA_BASE_URL
ARG OLLAMA_EMBEDDING
ARG POSTGRES_HOST
ARG POSTGRES_PORT
ARG ASSETS_PREFIX_URL
ARG CACHE_HANDLER_REDIS_URL
ARG NEXT_PUBLIC_SPRING_CLIENT_WEBSOCKET
ARG NEXT_ZIPKIN_URL
ARG NEXTAUTH_SECRET

ENV NEXT_PUBLIC_SPRING=${NEXT_PUBLIC_SPRING}
ENV NEXT_PUBLIC_SPRING_CLIENT=${NEXT_PUBLIC_SPRING_CLIENT}
ENV NEXTAUTH_URL=${NEXTAUTH_URL}
ENV NEXTAUTH_URL_INTERNAL=${NEXTAUTH_URL_INTERNAL}
ENV OLLAMA_MODEL=${OLLAMA_MODEL}
ENV OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
ENV OLLAMA_EMBEDDING=${OLLAMA_EMBEDDING}
ENV POSTGRES_HOST=${POSTGRES_HOST}
ENV POSTGRES_PORT=${POSTGRES_PORT}
ENV NEXT_PUBLIC_SPRING_CLIENT_WEBSOCKET=${NEXT_PUBLIC_SPRING_CLIENT_WEBSOCKET}
ENV NEXT_ZIPKIN_URL=${NEXT_ZIPKIN_URL}
ENV NEXT_PUBLIC_NEXTAUTH_URL=${NEXT_PUBLIC_NEXTAUTH_URL}
ENV ASSETS_PREFIX_URL=${ASSETS_PREFIX_URL}
ENV CACHE_HANDLER_REDIS_URL=${CACHE_HANDLER_REDIS_URL}
ENV NEXTAUTH_SECRET=${NEXTAUTH_SECRET}

RUN npm run build

FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN apk add --no-cache curl netcat-openbsd

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public
# FOR LANGCHAIN DOC LOADER
COPY --from=builder /app/src ./src
COPY --from=builder /app/scrape ./scrape


RUN mkdir .next
RUN chown nextjs:nodejs .next


COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000 9464

ENV PORT=3000


CMD ["node", "server.js"]
